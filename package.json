{
  "name": "crypto-portal",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "node scripts/preflight-check.mjs && node scripts/port-fallback.mjs dev 5000 5001 3000",
    "start": "node scripts/preflight-check.mjs && node scripts/port-fallback.mjs start 5000 5001 3000",
    "dev:5000": "node scripts/preflight-check.mjs && next dev -p 5000",
    "dev:5001": "node scripts/preflight-check.mjs && next dev -p 5001",
    "dev:3000": "node scripts/preflight-check.mjs && next dev -p 3000",
    "build": "node scripts/preflight-check.mjs && npm run audit:routes && next build",
    "postinstall": "prisma generate",
    "prisma:deploy": "prisma migrate deploy",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:deploy": "prisma migrate deploy",
    "db:seed": "node --import tsx prisma/seed.ts",
    "seed:prod": "NODE_ENV=production npx prisma db seed",
    "init": "npm run db:migrate && npm run db:seed",
    "deploy:check": "node scripts/verify-env.mjs",
    "lint": "next lint",
    "db:generate": "npx prisma generate",
    "db:setup": "npx prisma generate && npx prisma db push && npx tsx prisma/seed.ts",
    "db:setup:prod": "npx prisma generate && npx prisma migrate deploy && npx tsx prisma/seed.ts",
    "db:test:prod": "npx prisma db execute --stdin < /dev/null",
    "db:migrate:prod": "npx prisma migrate deploy",
    "db:reset": "node -e \"const fs=require('fs'); try{fs.unlinkSync('prisma/dev.db')}catch(e){}\" && npm run db:setup",
    "setup:neon": "node scripts/setup-neon.mjs",
    "migrate:to-postgres": "node scripts/migrate-to-postgres.mjs",
    "test:neon": "node scripts/test-neon-connection.mjs",
    "setup:prod-env": "node scripts/setup-production-env.mjs",
    "setup": "node scripts/setup.mjs",
    "generate-secret": "node scripts/generate-secret.js",
    "test": "playwright test",
    "test:e2e": "playwright test",
    "test:ui": "playwright test --ui",
    "typecheck": "tsc --noEmit",
    "audit:routes": "npx ts-node scripts/auditRoutes.ts",
    "check:links": "npx ts-node scripts/checkLinks.ts",
    "test:ports": "node scripts/verify-port-fallback.mjs",
    "test:prisma": "node scripts/test-prisma.mjs",
    "fix:env": "node scripts/fix-env-port.mjs",
    "fix:prisma": "node scripts/fix-prisma-windows.mjs",
    "clean:prisma": "node scripts/clean-prisma.mjs",
    "make-admin": "node scripts/make-admin.mjs",
    "export:data": "node scripts/export-data.mjs",
    "import:data": "node scripts/import-data.mjs"
  },
  "dependencies": {
    "@next-auth/prisma-adapter": "^1.0.7",
    "@prisma/client": "^5.22.0",
    "@radix-ui/react-avatar": "^1.0.4",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-slot": "^1.0.2",
    "@types/papaparse": "^5.3.16",
    "@uiw/react-md-editor": "^3.22.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "date-fns": "^3.6.0",
    "decimal.js": "^10.6.0",
    "html2canvas": "^1.4.1",
    "lucide-react": "^0.303.0",
    "nanoid": "^5.1.6",
    "next": "^14.2.32",
    "next-auth": "^4.24.11",
    "next-mdx-remote": "^4.4.1",
    "papaparse": "^5.5.3",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "recharts": "^3.2.1",
    "rehype-autolink-headings": "^6.1.1",
    "rehype-sanitize": "^6.0.0",
    "rehype-slug": "^6.0.0",
    "remark-gfm": "^3.0.1",
    "sonner": "^2.0.7",
    "swr": "^2.2.4",
    "tailwind-merge": "^2.2.0",
    "tailwindcss-animate": "^1.0.7",
    "zod": "^4.1.11"
  },
  "devDependencies": {
    "@playwright/test": "^1.40.0",
    "@types/node": "^20.19.17",
    "@types/react": "^18.3.24",
    "@types/react-dom": "^18.3.7",
    "autoprefixer": "^10.4.21",
    "eslint": "^8.57.1",
    "eslint-config-next": "^14.2.32",
    "postcss": "^8.5.6",
    "prisma": "^5.22.0",
    "tailwindcss": "^3.4.15",
    "tsx": "^4.6.2",
    "typescript": "^5.9.2"
  }
}
